vis5 <- ggplot(mat4, aes(y = gend, x = geob)) +
geom_boxplot() +
geom_jitter(alpha = 0.5, width = 0.2) +
labs(y = "Genetic Distance (%)", x = "Biogeographic Barrier Absent/Present (0/1)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 12),
axis.text.y = element_text(face = "bold", size = 12, colour = "black"),
axis.title= element_text(face = "bold", size = 12, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
ggsave(
filename = here::here("final-figures", "barrier_points.png"),
plot = vis5,
width = 20,
height = 15,
units = "cm",
dpi = 720
)
#plot with barrier of peninsula absent/present with points
vis5 <- ggplot(mat4, aes(y = gend, x = geob)) +
geom_boxplot() +
geom_jitter(alpha = 0.5, width = 0.2) +
labs(y = "Genetic Distance (%)", x = "Biogeographic Barrier Absent/Present (0/1)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 15),
axis.text.y = element_text(face = "bold", size = 15, colour = "black"),
axis.title= element_text(face = "bold", size = 12, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
ggsave(
filename = here::here("final-figures", "barrier_points.png"),
plot = vis5,
width = 20,
height = 15,
units = "cm",
dpi = 720
)
#plot with barrier of peninsula absent/present with points
vis5 <- ggplot(mat4, aes(y = gend, x = geob)) +
geom_boxplot() +
geom_jitter(alpha = 0.5, width = 0.2) +
labs(y = "Genetic Distance (%)", x = "Biogeographic Barrier Absent/Present (0/1)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 15),
axis.text.y = element_text(face = "bold", size = 15, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis5
ggsave(
filename = here::here("final-figures", "barrier_points.png"),
plot = vis5,
width = 20,
height = 15,
units = "cm",
dpi = 720
)
#plot with barrier of peninsula absent/present with points
vis5 <- ggplot(mat4, aes(y = gend, x = geob)) +
geom_boxplot() +
geom_jitter(alpha = 1, width = 0.2) +
labs(y = "Genetic Distance (%)", x = "Biogeographic Barrier Absent/Present (0/1)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 15),
axis.text.y = element_text(face = "bold", size = 15, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis5
#plot with barrier of peninsula absent/present with points
vis5 <- ggplot(mat4, aes(y = gend, x = geob)) +
geom_boxplot() +
geom_jitter(alpha = 0.8, width = 0.2) +
labs(y = "Genetic Distance (%)", x = "Biogeographic Barrier Absent/Present (0/1)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 15),
axis.text.y = element_text(face = "bold", size = 15, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis5
#export plots as pdf
ggsave(
filename = here::here("final-figures", "euclidean.png"),
plot = vis,
width = 20,
height = 15,
units = "cm",
dpi = 720
)
ggsave(
filename = here::here("final-figures", "coastal.png"),
plot = vis2,
width = 20,
height = 15,
units = "cm",
dpi = 720
)
ggsave(
filename = here::here("final-figures", "oceanic.png"),
plot = vis3,
width = 20,
height = 15,
units = "cm",
dpi = 720
)
ggsave(
filename = here::here("final-figures", "barrier.png"),
plot = vis4,
width = 20,
height = 15,
units = "cm",
dpi = 720
)
ggsave(
filename = here::here("final-figures", "barrier_points.png"),
plot = vis5,
width = 20,
height = 15,
units = "cm",
dpi = 720
)
#plot euclidean geographic distance
vis <- ggplot(mat, aes(y = gend, x = geod)) +
geom_smooth(method = "lm", alpha =0.51, colour = "blue") +
geom_point(size =2, alpha = 1) +
labs(y = "Genetic Distance (%)", x = "Geographic Distance (km)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 15),
axis.text.y = element_text(face = "bold", size = 15, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis
#plot coastal distance
vis2 <- ggplot(mat2, aes(y = gend, x = geoc)) +
geom_smooth(method = "lm", alpha =0.51, colour = "blue") +
geom_point(size =2, alpha = 1) +
labs(y = "Genetic Distance (%)", x = "Coastal Distance (km)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 15),
axis.text.y = element_text(face = "bold", size = 15, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis2
#plot oceanic distance
vis3 <- ggplot(mat3, aes(y = gend, x = geoo)) +
geom_smooth(method = "lm", alpha =0.51, colour = "blue") +
geom_point(size =2, alpha = 1) +
labs(y = "Genetic Distance (%)", x = "Oceanic Distance (km)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 15),
axis.text.y = element_text(face = "bold", size = 15, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis3
#plot with barrier of peninsula absent/present
vis4 <- ggplot(mat4, aes(y = gend, x = geob)) +
geom_boxplot() +
labs(y = "Genetic Distance (%)", x = "Biogeographic Barrier Absent/Present (0/1)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 15),
axis.text.y = element_text(face = "bold", size = 15, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis4
#plot with barrier of peninsula absent/present with points
vis5 <- ggplot(mat4, aes(y = gend, x = geob)) +
geom_boxplot() +
geom_jitter(alpha = 0.8, width = 0.2) +
labs(y = "Genetic Distance (%)", x = "Biogeographic Barrier Absent/Present (0/1)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 15),
axis.text.y = element_text(face = "bold", size = 15, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis5
#export plots as pdf
ggsave(
filename = here::here("final-figures", "euclidean.png"),
plot = vis,
width = 20,
height = 15,
units = "cm",
dpi = 720
)
ggsave(
filename = here::here("final-figures", "coastal.png"),
plot = vis2,
width = 20,
height = 15,
units = "cm",
dpi = 720
)
ggsave(
filename = here::here("final-figures", "oceanic.png"),
plot = vis3,
width = 20,
height = 15,
units = "cm",
dpi = 720
)
ggsave(
filename = here::here("final-figures", "barrier.png"),
plot = vis4,
width = 20,
height = 15,
units = "cm",
dpi = 720
)
ggsave(
filename = here::here("final-figures", "barrier_points.png"),
plot = vis5,
width = 20,
height = 15,
units = "cm",
dpi = 720
)
git remote add origin git@github.com:carinamotta/suaeda-landscape-genetics.git
git remote add git@github.com:carinamotta/suaeda-landscape-genetics.git
package.list <- c("here", #so I don't have to deal with setting a WD
"adegenet", #import DNA sequences
"ape", #calculating genetic distance
"reshape2", #reshaping matrix to vector
"Imap", #measuring geographic distance
"vegan", #mantel test
"tidyverse", #data cleaning
"dplyr", #data cleaning
"stringr", #data cleaning
"ggplot2" #mantel test visualization
)
#installing the packages if they aren't already on the computer
new.packages <- package.list[!(package.list %in% installed.packages()
[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#and loading the packages into R with a for loop
for(i in package.list){library(i, character.only = T)}
#exported aligned sequences from Geneious as .fasta file and edited in
#Notepad++ to simplify sequence names and change order
#load .fasta file of aligned sequences as a DNAbin object using
#'adegenet' package
seq <- fasta2DNAbin(here("data", "2021_alignment.fasta"), quiet=FALSE, chunkSize=10,
snpOnly=FALSE)
gendist_raw <- 100*(dist.dna(seq, model='raw', pairwise.deletion = F,
as.matrix=T))
geo_suaeda <- data.frame(name = c("1044_si", "1045_si", "1062_si",
"1064_sg", "1051_sca", "1052_sca",
"1053_sca", "1046_laa", "1047_laa",
"1048_laa", "1040_loa", "1041_loa",
"1042_loa", "1043_loa", "994_sf",
"995_sf", "1038_sf", "1039_sf",
"990_ll", "991_ll", "992_ll",
"993_ll", "1054_sr", "1055_sr",
"1056_sr", "1057_sr", "1058_scr",
"1059_scr", "1060_scr", "1061_scr"
),
lat = c(26.8008333, 26.8008333, 26.8008333, 26.0616667,
24.7997222, 24.7997222, 24.7997222, 28.8016667,
28.8016667, 28.8016667, 28.9716667, 28.9716667,
28.9716667, 28.9716667,31.2880556, 31.2880556,
31.2880556, 31.2880556, 31.7841667, 31.7841667,
31.7841667, 31.7841667, 28.9666667, 28.9666667,
28.9666667, 28.9666667, 28.8, 28.8, 28.8, 28.8),
lon = c(-113.1480556, -113.1480556, -113.1480556,
-112.272777777777, -112.1152778, -112.1152778,
-112.1152778, -113.3313889, -113.3313889,
-113.3313889, -113.5466667, -113.5466667,
-113.5466667, -113.5466667, -114.8927778,
-114.8927778, -114.8927778, -114.8927778,
-114.6288889, -114.6288889, -114.6288889,
-114.6288889, -112.1416667, -112.1416667,
-112.1416667, -112.1416667, -111.9166667,
-111.9166667,-111.9166667,-111.9166667))
ReplaceLowerOrUpperTriangle <- function(m, triangle.to.replace){
if(nrow(m) !=ncol(m)) stop("Supplied matrix must be square.")
if      (tolower(triangle.to.replace) == "lower") tri <- lower.tri(m)
else if (tolower(triangle.to.replace) == "upper") tri <- upper.tri(m)
m[tri] <- t(m)[tri]
return(m)
}
GeoDistanceInMetersMatrix <- function(df.geopoints){
#returns a matrix (M) of distances between geographic points
#M[i,j] = M[j,i] = Distance between (df.geopoints$lat[i], df.geopoints$lon[i])
#and (df.geopoints$lat[j], df.geopoints$lon[j])
#The row and column names are given by df.geopoints$name
GeoDistanceInMeters <- function(g1, g2){
#Returns a vector of distances. (But if g1$index > g2$index, returns zero.)
#The 1st value in the returned vector is the distance between g1[[1]]
#and g2[[1]]. The 2nd value in the returned vector is the distance between
#g1[[2]] and g2[[2]]. Etc. Each g1[[x]] or g2[[x]] must be a list with the
#named elements "index", "lat", and "lon".
#E.g. g1 <- list(list("index"=1, "lat"=12.1, "lon"=10.1),
#list("index"=3, "lat" = 12.1, "lon" = 13.2))
DistM <- function(g1, g2){
require("Imap")
return(ifelse(g1$index > g2$index, 0, gdist(lat.1=g1$lat,
lon.1=g1$lon,
lat.2=g2$lat,
lon.2=g2$lon,
units="m")))
}
return(mapply(DistM, g1, g2))
}
n.geopoints <- nrow(df.geopoints)
df.geopoints$index <- 1:n.geopoints
list.geopoints <- by(df.geopoints[,c("index", "lat", "lon")], 1:n.geopoints,
function(x){return(list(x))})
mat.distances <- ReplaceLowerOrUpperTriangle(outer(list.geopoints,
list.geopoints,
GeoDistanceInMeters),
"lower")
rownames(mat.distances) <- df.geopoints$name
colnames(mat.distances) <- df.geopoints$name
return(mat.distances)
}
#CREATE MATRIX
#divide by 1000 to make units km
geodist_euclidean <- round(GeoDistanceInMetersMatrix(geo_suaeda) / 1000)
mantel(gendist_raw, geodist_euclidean, method ="pearson", permutations = 9999)
#convert matrices to vectors
gend <- as.vector(gendist_raw)
geod <- as.vector(geodist_euclidean)
#make new data frame with vectorized distance matrices
mat <- data.frame(gend, geod)
#plot euclidean geographic distance
vis <- ggplot(mat, aes(y = gend, x = geod)) +
geom_smooth(method = "lm", alpha =0.51, colour = "blue") +
geom_point(size =2, alpha = 1) +
labs(y = "Genetic Distance (%)", x = "Euclidean Distance (km)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 15),
axis.text.y = element_text(face = "bold", size = 15, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis
#export plots as png
ggsave(
filename = here::here("final-figures", "euclidean.png"),
plot = vis,
width = 20,
height = 15,
units = "cm",
dpi = 720
)
coast <- read.csv(here("data", "geodist_coastline.csv"), row.names = 1, header = T,
stringsAsFactors = F)
coast[ , 1:30] <- apply(coast[ , 1:30], 2,
function(x) as.numeric(as.character(x)))
geodist_coastline <- coast %>% rename_all(~stringr::str_replace(.,"^X",""))
geodist_coast <- as.matrix(geodist_coastline)
mantel(gendist_raw, geodist_coast, method = "pearson", permutations = 9999)
ocean <- read.csv(here("data","geodist_oceandist.csv"), row.names = 1, header = T,
stringsAsFactors = F)
ocean[ , 1:30] <- apply(ocean[ , 1:30], 2,
function(x) as.numeric(as.character(x)))
geodist_oceandist <- ocean %>% rename_all(~stringr::str_replace(.,"^X",""))
geodist_ocean <- as.matrix(geodist_oceandist)
mantel(gendist_raw, geodist_ocean, method = "pearson", permutations = 9999)
barrier <- read.csv(here("data","geodist_barrier.csv"), row.names = 1, header = T,
stringsAsFactors = F)
#made contents of data.frame characters for boxplot
barrier[ , 1:30] <- apply(barrier[ , 1:30], 2,
function(x) as.character(as.character(x)))
geodist_barrier <- barrier %>% rename_all(~stringr::str_replace(.,"^X",""))
geodist_barrier <- as.matrix(geodist_barrier)
str(geodist_barrier)
mantel(gendist_raw, geodist_barrier, method = "pearson", permutations = 9999)
?as.vector
#convert matrices to vectors
gend <- as.vector(gendist_raw)
geod <- as.vector(geodist_euclidean)
geoc <- as.vector(geodist_coast)
geoo <- as.vector(geodist_ocean)
geob <- as.vector(geodist_barrier)
#make new data frame with vectorized distance matrices
mat <- data.frame(gend, geod)
mat2 <- data.frame(gend, geoc)
mat3 <- data.frame(gend, geoo)
mat4 <- data.frame(gend, geob)
#plot euclidean geographic distance
vis <- ggplot(mat, aes(y = gend, x = geod)) +
geom_smooth(method = "lm", alpha =0.51, colour = "blue") +
geom_point(size =2, alpha = 1) +
labs(y = "Genetic Distance (%)", x = "Euclidean Distance (km)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 15),
axis.text.y = element_text(face = "bold", size = 15, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis
#plot coastal distance
vis2 <- ggplot(mat2, aes(y = gend, x = geoc)) +
geom_smooth(method = "lm", alpha =0.51, colour = "blue") +
geom_point(size =2, alpha = 1) +
labs(y = "Genetic Distance (%)", x = "Coastal Distance (km)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 15),
axis.text.y = element_text(face = "bold", size = 15, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis2
#plot oceanic distance
vis3 <- ggplot(mat3, aes(y = gend, x = geoo)) +
geom_smooth(method = "lm", alpha =0.51, colour = "blue") +
geom_point(size =2, alpha = 1) +
labs(y = "Genetic Distance (%)", x = "Oceanic Distance (km)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 15),
axis.text.y = element_text(face = "bold", size = 15, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis3
#plot with barrier of peninsula absent/present
vis4 <- ggplot(mat4, aes(y = gend, x = geob)) +
geom_boxplot() +
labs(y = "Genetic Distance (%)", x = "Biogeographic Barrier Absent/Present (0/1)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 15),
axis.text.y = element_text(face = "bold", size = 15, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis4
#plot coastal distance
vis2 <- ggplot(mat2, aes(y = gend, x = geoc)) +
geom_smooth(method = "lm", alpha =0.51, colour = "blue") +
geom_point(size =2, alpha = 1) +
labs(y = "Genetic Distance (%)", x = "Coastal Distance (km)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 18),
axis.text.y = element_text(face = "bold", size = 18, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
#plot euclidean geographic distance
vis <- ggplot(mat, aes(y = gend, x = geod)) +
geom_smooth(method = "lm", alpha =0.51, colour = "blue") +
geom_point(size =2, alpha = 1) +
labs(y = "Genetic Distance (%)", x = "Euclidean Distance (km)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 18),
axis.text.y = element_text(face = "bold", size = 18, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis
#plot coastal distance
vis2 <- ggplot(mat2, aes(y = gend, x = geoc)) +
geom_smooth(method = "lm", alpha =0.51, colour = "blue") +
geom_point(size =2, alpha = 1) +
labs(y = "Genetic Distance (%)", x = "Coastal Distance (km)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 18),
axis.text.y = element_text(face = "bold", size = 18, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis2
#plot oceanic distance
vis3 <- ggplot(mat3, aes(y = gend, x = geoo)) +
geom_smooth(method = "lm", alpha =0.51, colour = "blue") +
geom_point(size =2, alpha = 1) +
labs(y = "Genetic Distance (%)", x = "Oceanic Distance (km)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 18),
axis.text.y = element_text(face = "bold", size = 18, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis3
#plot with barrier of peninsula absent/present
vis4 <- ggplot(mat4, aes(y = gend, x = geob)) +
geom_boxplot() +
labs(y = "Genetic Distance (%)", x = "Biogeographic Barrier Absent/Present (0/1)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 18),
axis.text.y = element_text(face = "bold", size = 18, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis4
#plot with barrier of peninsula absent/present with points
vis5 <- ggplot(mat4, aes(y = gend, x = geob)) +
geom_boxplot() +
geom_jitter(alpha = 0.8, width = 0.2) +
labs(y = "Genetic Distance (%)", x = "Biogeographic Barrier Absent/Present (0/1)") +
theme( axis.text.x = element_text(face = "bold",colour = "black", size = 18),
axis.text.y = element_text(face = "bold", size = 18, colour = "black"),
axis.title= element_text(face = "bold", size = 20, colour = "black"),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, colour = "black"),
strip.text = element_text(size = 9, face = "bold"))
vis5
citation("vegan")
citation("vegan")
#export plots as png
ggsave(
filename = here::here("final-figures", "euclidean.png"),
plot = vis,
width = 20,
height = 15,
units = "cm",
dpi = 720
)
